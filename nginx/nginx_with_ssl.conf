user ec2-user;
worker_processes auto;

events {
    worker_connections 65000;
    multi_accept on;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Hide Nginx version
    server_tokens off;

    # Buffer size for POST submissions
    client_body_buffer_size 10K;
    client_max_body_size 8m;

    # Buffer size for Headers
    client_header_buffer_size 1k;

    # Max time to receive client headers/body
    client_body_timeout 12;
    client_header_timeout 12;

    # Max time to keep a connection open for
    keepalive_timeout 15;

    # Max time for the client accept/receive a response
    send_timeout 10;

    # Skip buffering for static files
    sendfile on;

    # Optimise sendfile packets
    tcp_nopush on;

    tcp_nodelay on;
    types_hash_max_size 2048;

    # Enable Gzip Compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 3;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # === Rate Limiting (Optional) ===
    # Define a shared memory zone called 'zone_api_limit' that stores request counters
    # The zone is 10MB and allows 10 requests per second per IP
    # limit_req_zone $binary_remote_addr zone=zone_api_limit:10m rate=10r/s;

    # Apply the rate limit in specific location blocks (e.g., /apis)
    # limit_req zone=zone_api_limit burst=20 nodelay;

    # Redirect all HTTP requests to HTTPS
    server {
        listen 80;
        server_name xuyenhoayen.store;

        # Serve Let's Encrypt HTTP challenge from a safe, separate path
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
            allow all;
        }

        # Redirect all other HTTP requests to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # SSL Server Block (for HTTPS)
    server {
        listen 443 ssl http2;
        server_name xuyenhoayen.store;

        ssl_certificate /etc/letsencrypt/live/xuyenhoayen.store/fullchain.pem;  # Update with your actual SSL certificate path
        ssl_certificate_key /etc/letsencrypt/live/xuyenhoayen.store/privkey.pem;  # Update with your actual private key path

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE+AESGCM:ECDHE+AES256:ECDHE+AES128:DHE+AESGCM:!3DES:!ADH:!AECDH:!MD5;
        ssl_prefer_server_ciphers on;

        # Enable DH Params (only needed if ssl_ciphers includes traditional DHE ciphers like DHE+AESGCM)
        # Uncomment the line below only if you're allowing non-ECDHE cipher suites
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Enforce HTTPS on all subdomains for 1 year (31536000 seconds)
        # Helps prevent SSL stripping attacks
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Prevent this site from being embedded in <iframe> on other domains (clickjacking protection)
        add_header X-Frame-Options DENY;

        # Prevent MIME type sniffing (forces browsers to use declared Content-Type)
        # Helps prevent attacks based on content-type confusion
        add_header X-Content-Type-Options nosniff;

        # Control what information is sent in the Referer header
        # "strict-origin-when-cross-origin" gives good balance of privacy & functionality
        add_header Referrer-Policy strict-origin-when-cross-origin;

        # Enable basic XSS protection in older browsers (mostly legacy now)
        # "1; mode=block" tells the browser to block page if XSS attack detected
        add_header X-XSS-Protection "1; mode=block";


        # Cache SSL sessions
        ssl_session_cache shared:SSL:40m;
        ssl_session_timeout 4h;
        ssl_session_tickets on;

        root /sites;
        index index.html;

        location / {
            try_files $uri $uri/ =404;
        }

        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot|otf|mp4|webm|ogg|ogv|webp|avif)$ {
            expires 1M;  # Cache for 1 month
            access_log off;
            log_not_found off;

            # Set strong caching headers
            add_header Cache-Control "public, max-age=2592000, immutable";
            add_header Pragma public;
            add_header Vary Accept-Encoding;
        }

        # Proxy API requests to NestJS server on EC2
        location /apis {
            # The trailing slash `/` removes the "/apis" prefix before forwarding to backend
            # Example:
            #   Request:  /apis/users  --> Backend receives as /users
            #   Request:  /apis/orders --> Backend receives as /orders
            proxy_pass http://localhost:3000/;  

            # Preserve client IP
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Optimize proxy settings
            proxy_buffering on;
            proxy_buffers 16 4k;
            proxy_buffer_size 8k;
            proxy_busy_buffers_size 16k;

            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            client_max_body_size 50M;
        }
    }
}
