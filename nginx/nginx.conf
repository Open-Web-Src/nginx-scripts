user www-data;
worker_processes auto;

events {
    worker_connections 65000; # Optimize for high performance
    multi_accept on;
}

http {
    include mime.types;
    default_type application/octet-stream;

     # Hide Nginx version
    server_tokens off;
    
    # Buffer size for POST submissions
    client_body_buffer_size 10K;
    client_max_body_size 8m;

    # Buffer size for Headers
    client_header_buffer_size 1k;

    # Max time to receive client headers/body
    client_body_timeout 12;
    client_header_timeout 12;

    # Max time to keep a connection open for
    keepalive_timeout 15;

    # Max time for the client accept/receive a response
    send_timeout 10;

    # Skip buffering for static files
    sendfile on;

    # Optimise sendfile packets
    tcp_nopush on;

    tcp_nodelay on;
    types_hash_max_size 2048;

    # Gzip Compression for performance
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # === Rate Limiting (Optional) ===
    # Define a shared memory zone called 'zone_api_limit' that stores request counters
    # The zone is 10MB and allows 10 requests per second per IP
    # limit_req_zone $binary_remote_addr zone=zone_api_limit:10m rate=10r/s;

    # Apply the rate limit in specific location blocks (e.g., /apis)
    # limit_req zone=zone_api_limit burst=20 nodelay;

    server {
        listen 80;
        server_name 54.163.190.214;  # Accept any request (change to your domain if needed)

        # Prevent this site from being embedded in <iframe> on other domains (clickjacking protection)
        add_header X-Frame-Options DENY;

        # Prevent MIME type sniffing (forces browsers to use declared Content-Type)
        # Helps prevent attacks based on content-type confusion
        add_header X-Content-Type-Options nosniff;

        # Control what information is sent in the Referer header
        # "strict-origin-when-cross-origin" gives good balance of privacy & functionality
        add_header Referrer-Policy strict-origin-when-cross-origin;

        # Enable basic XSS protection in older browsers (mostly legacy now)
        # "1; mode=block" tells the browser to block page if XSS attack detected
        add_header X-XSS-Protection "1; mode=block";

        root /home/ec2-user/sites;
        index index.html;

        location / {
            try_files $uri $uri/ =404;
        }

        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot|otf|mp4|webm|ogg|ogv|webp|avif)$ {
            expires 1M;  # Cache for 1 month
            access_log off;
            log_not_found off;

            # Set strong caching headers
            add_header Cache-Control "public, max-age=2592000, immutable";
            add_header Pragma public;
            add_header Vary Accept-Encoding;
        }


        # Proxy requests to NestJS server at http://localhost:3000
        location /apis {
            # The trailing slash `/` removes the "/apis" prefix before forwarding to backend
            # Example:
            #   Request:  /apis/users  --> Backend receives as /users
            #   Request:  /apis/orders --> Backend receives as /orders
            proxy_pass http://localhost:3000/;  

            # Restore real client IP instead of Cloudflare IP
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Enable proxy buffering and set timeouts
            proxy_buffering on;
            proxy_buffers 16 4k;
            proxy_buffer_size 8k;
            proxy_busy_buffers_size 16k;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            client_max_body_size 50M;
        }
    }
}
